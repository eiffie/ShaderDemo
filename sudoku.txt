[bufA]
#define KEY_E (65+4)
bool KeyDown(in int key){
	return (texture2D(iChannel1,vec2((float(key)+0.5)/256.0, 0.25)).x>0.0);
}

int NumDown(){
	int r=0;
	for(int i=1;i<10;i++){
		if(KeyDown(48+i)){r=i;break;}
	}
	return r;
}
#define S(X,Y,c) if(i.x==X && i.y==Y)return c
vec3 setup(vec2 U){// puzzle from http://school.maths.uwa.edu.au/~gordon/sudokumin.php
	ivec2 i=ivec2(floor(U));
	S(0,0,vec3(6,9,3));
	S(1,0,vec3(7,8,4));
	S(2,0,vec3(5,-1,2));
	S(0,1,vec3(-4,8,7));
	S(1,1,vec3(5,1,2));
	S(2,1,vec3(9,3,6));
	S(0,2,vec3(1,-2,5));
	S(1,2,vec3(9,6,3));
	S(2,2,vec3(8,7,4));
	S(0,3,vec3(9,3,2));
	S(1,3,vec3(6,-5,1));
	S(2,3,vec3(-4,8,-7));
	S(0,4,vec3(5,6,-8));
	S(1,4,vec3(2,4,7));
	S(2,4,vec3(-3,9,1));
	S(0,5,vec3(7,4,-1));
	S(1,5,vec3(3,-9,8));
	S(2,5,vec3(6,2,5));
	S(0,6,vec3(-3,1,9));
	S(1,6,vec3(-4,7,5));
	S(2,6,vec3(-2,6,8));
	S(0,7,vec3(8,-5,6));
	S(1,7,vec3(-1,2,9));
	S(2,7,vec3(7,4,3));
	S(0,8,vec3(2,7,4));
	S(1,8,vec3(-8,3,-6));
	S(2,8,vec3(1,5,9));
    return vec3(0.0);
}

float Tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}
float Arc(in vec2 p, float s, float e, float r1, float r2) {float t=clamp(atan(p.y*r1,p.x*r2),s,e);return length(p-vec2(r1*cos(t),r2*sin(t)));}
float num(vec2 p, int n){
	vec2 a=abs(p),a4=a-0.4;
	float d;
	if(n==0)return abs(length(p)-0.4); 
	if(n==1)return max(a.x,a4.y);
	if(n==2){
		d=Arc(p-vec2(0.0,0.2),-1.57,2.4,0.4,0.2);
		d=min(d,Arc(p+vec2(0.0,0.4),1.57,3.14,0.4,0.4));
		d=min(d,max(a4.x,abs(p.y+0.4)));
		return d;
	}
	if(n==3){
		d=Arc(p-vec2(0.0,0.2),-1.57,2.4,0.4,0.2);
		d=min(d,Arc(p+vec2(0.0,0.2),-2.4,1.57,0.4,0.2));
		return d;
	}
	if(n==4){
		d=max(a4.x,a.y);
		d=min(d,max(abs(p.x-0.4),a4.y));
		d=min(d,Tube(p-vec2(-0.4,0.0),vec2(0.6,0.4)));//split the difference in 4's
		return d;
	}
	if(n==5){
		d=max(a4.x,abs(p.y-0.4));
		d=min(d,max(abs(p.x+0.4),abs(p.y-0.2)-0.2));
		d=min(d,Arc(p-vec2(-0.05,-0.15),-2.45,2.45,0.45,0.3));
		return d;
	}
	if(n==6){
		d=Arc(p-vec2(0.0,-0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(0.2,-0.2),1.57,3.1416,0.6,0.6));
		return d;
	}
	if(n==7){
		d=max(a4.x,abs(p.y-0.4));
		d=min(d,Tube(p-vec2(-0.4,-0.4),vec2(0.8,0.8)));
		return d;
	}
	if(n==8){
		d=Arc(p-vec2(0.0,0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(0.0,-0.2),-3.1416,3.1416,0.4,0.2));
		return d;
	}
	if(n==9){
		d=Arc(p-vec2(0.0,0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(-0.2,0.2),-1.8,0.0,0.6,0.6));
		return d;
	}
    return 1.0;
}
#define OLD_MOUSE vec2(0.5,9.5)
float rnd,GoldenAngle;
float rand(){return fract(rnd+=GoldenAngle);}
void randomize(float t){
	GoldenAngle=2.0-0.5*(1.0+sqrt(5.0));rnd=fract(t);
}
#define SWAP(a) if(abs(a)==n1)a=sign(a)*n2;else if(abs(a)==n2)a=sign(a)*n1
void mainImage(out vec4 O, in vec2 U){
	O=floor(texture2D(iChannel0,U/iResolution.xy)+vec4(0.1));
	if(iFrame==0){
		O=vec4(1.0);
		if(U==OLD_MOUSE)O=iMouse;
		if(U.x>3.0 || U.y>9.0)return;
		O.rgb=setup(U)+vec3(0.1);
	}else if(iFrame<50){//do swaps
		if(U.x>3.0 || U.y>9.0)return;
		randomize(iGlobalTime-iDate.w+float(iFrame)*0.417);
		if(rand()<0.5){
			vec2 u=floor(U);u.y=mod(u.y+3.1,8.9);
			O=floor(texture2D(iChannel0,(u+vec2(0.5))/iResolution.xy)+vec4(0.1));
		}else{
			/*vec2 v=floor(U);
			v+=floor(vec2(rand(),rand())*2.99999);
			v=mod(v,vec2(3.0));
			vec2 u=floor(U);
			v=floor(U/3.0)*3.0+mod(mod(u,vec2(3.0))+v,vec2(3.0));
			O=texture2D(iChannel0,(v+vec2(0.5))/iResolution.xy);
			float n1=1.0+floor(rand()*8.99999),n2=1.0+floor(rand()*8.99999);
			SWAP(O.x);
			SWAP(O.y);
			SWAP(O.z);
			if(rand()*3.0<U.x)O.xy=O.yx;
			if(rand()*3.0<U.x+0.5)O.xz=O.zx;*/
		}
	}else{
		int n=NumDown();
		if(n>0){
			vec2 ms=abs(iMouse.zw);
			ms=(ms-0.5*iResolution.xy)/iResolution.yy;
			ms+=0.5;//now 0-1
			if(ms.x>0.0 && ms.x<1.0){
				vec2 uv=(U-0.5*iResolution.xy)/iResolution.yy;
				uv+=0.5;//now 0-1
				if(length(ms-uv)<3.0/iResolution.y)O=vec4(1.0);
				uv-=floor(ms*vec2(9.0,9.0))/vec2(9.0,9.0);
				uv*=12.0;uv-=0.65;
				if(max(abs(uv.x),abs(uv.y))<0.5){
					float d=num(uv,n);
					d=smoothstep(0.0,0.05,d);
					O.rgb=min(O.rgb,vec3(d));
				}
			}
		}
		if(iMouse.z>0.0 && iMouse.x>3.0){
			vec4 om=texture2D(iChannel0,OLD_MOUSE/iResolution.xy);
			if(om.z!=iMouse.z)om.xy=iMouse.xy;
			float d=Tube(U.xy-iMouse.xy,om.xy-iMouse.xy);
			bool bErase=KeyDown(KEY_E);
			d=smoothstep(0.0,bErase?10.0:1.5,d);
			O.rgb=mix(vec3(bErase?1.0:0.0),O.rgb,d);
		}
		if(U==OLD_MOUSE)O=iMouse;
	}
}
[image]
//Daily Sudoku by eiffie
//Not a sudoku solver or puzzle creator! This just jumbles the same puzzle until you think it is
//different. :) The GUI works like this.
//Draw all over the place with the mouse (whatever marks you prefer)
//Press "E" while mousing to erase marks.
//Click in a square and type a number if you think you know it.
//Press "A" to cheat... I mean check your answer when completed.

#define KEY_A 65

bool KeyDown(in int key){
	return (texture2D(iChannel1,vec2((float(key)+0.5)/256.0, 0.25)).x>0.0);
}
float Tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0));}
float Arc(in vec2 p, float s, float e, float r1, float r2) {float t=clamp(atan(p.y*r1,p.x*r2),s,e);return length(p-vec2(r1*cos(t),r2*sin(t)));}
float num(vec2 p, int n){
	vec2 a=abs(p),a4=a-0.4;
	float d;
	if(n==0)return abs(length(p)-0.4); 
	if(n==1)return max(a.x,a4.y);
	if(n==2){
		d=Arc(p-vec2(0.0,0.2),-1.57,2.4,0.4,0.2);
		d=min(d,Arc(p+vec2(0.0,0.4),1.57,3.14,0.4,0.4));
		d=min(d,max(a4.x,abs(p.y+0.4)));
		return d;
	}
	if(n==3){
		d=Arc(p-vec2(0.0,0.2),-1.57,2.4,0.4,0.2);
		d=min(d,Arc(p+vec2(0.0,0.2),-2.4,1.57,0.4,0.2));
		return d;
	}
	if(n==4){
		d=max(a4.x,a.y);
		d=min(d,max(abs(p.x-0.4),a4.y));
		d=min(d,Tube(p-vec2(-0.4,0.0),vec2(0.6,0.4)));//split the difference in 4's
		return d;
	}
	if(n==5){
		d=max(a4.x,abs(p.y-0.4));
		d=min(d,max(abs(p.x+0.4),abs(p.y-0.2)-0.2));
		d=min(d,Arc(p-vec2(-0.05,-0.15),-2.45,2.45,0.45,0.3));
		return d;
	}
	if(n==6){
		d=Arc(p-vec2(0.0,-0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(0.2,-0.2),1.57,3.1416,0.6,0.6));
		return d;
	}
	if(n==7){
		d=max(a4.x,abs(p.y-0.4));
		d=min(d,Tube(p-vec2(-0.4,-0.4),vec2(0.8,0.8)));
		return d;
	}
	if(n==8){
		d=Arc(p-vec2(0.0,0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(0.0,-0.2),-3.1416,3.1416,0.4,0.2));
		return d;
	}
	if(n==9){
		d=Arc(p-vec2(0.0,0.2),-3.1416,3.1416,0.4,0.2);
		d=min(d,Arc(p-vec2(-0.2,0.2),-1.8,0.0,0.6,0.6));
		return d;
	}
    return 1.0;
}

void mainImage(out vec4 fragColor, in vec2 fragCoord){
	vec2 uv=(fragCoord.xy-0.5*iResolution.xy)/iResolution.yy;
	uv+=0.5;//now 0-1 on centered grid
	vec3 col=texture2D(iChannel0,fragCoord.xy/iResolution.xy).rgb;
	if(uv.x<0.0 || uv.x>1.0){fragColor=vec4(col,1.0);return;}
	
	vec2 p=abs(mod(uv+1.0/6.0,1.0/3.0)-1.0/6.0);
	float d=min(p.x,p.y);
	d=smoothstep(0.0,0.01,d);
	p=abs(mod(uv+1.0/18.0,1.0/9.0)-1.0/18.0);
	float d2=min(p.x,p.y);
	d2=smoothstep(0.0,0.003,d2);
	p=floor(uv*vec2(3.0,9.0));
	vec3 c=-texture2D(iChannel0,(p+0.5)/iResolution.xy).rgb;
	float d3=10.0;
	for(int i=0;i<3;i++){
		if(KeyDown(KEY_A))c.x=abs(c.x);
		if(c.x>0.0){
			d3=min(d3,num((uv-(p/vec2(3.0,9.0)+vec2(float(i)/9.0,0.0)))*12.0-vec2(0.65),int(c.x)));
		}
		c.xy=c.yz;
	}
	d3=smoothstep(0.0,0.1,d3);
	col=min(col,vec3(min(d,min(d2,d3))));
	fragColor=vec4(col,1.0);
}